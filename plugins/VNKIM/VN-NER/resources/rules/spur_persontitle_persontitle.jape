/*
 *  spur_persontitle_persontitle.jape
 *  Copyright 2004-2006 Truc Vien, HCMUT.
 */
Phase:	Spur_PersonTitle_PersonTitle
Input: 	Sentence Split Token Number Pp Np FirstPerson LastPerson TempPerson TempLocation TempOrganization TempAbstract TempEvent NamedEntity
	JobTitle Title
	NLNC
	TTCT LHCT LHKD
	TTGDDT TDDT LHTC NNDT
	NLBCQNB NLCLBBD NLCLBTT NLCNPBK NLCQTP NLDCT NLDN NLHDND NLLDTT NLNOICAC NLQH NLSO NLTCNN NLTCQT NLTCTT NLTCTG NLTCXH NLTRT NLTTGDCK
	NLUBND NLVNC NLTCNC
	NLDT
	NLHTTN NLBC
	LR_TempPerson LR_TempLocation LR_TempOrganization LR_TempObject LR_TempAbstract LR_TempEvent
Options: control = appelt debug = no

///////////////////////////////////////////////////////////////
// MACRO definition
/////////////////////////////////////////////////////////////////

Macro: TITLE
(
   (  {Title}
      ({Title})?
   ) |
   (  {Title}
      ({JobTitle})?
   ) |
   ({JobTitle})
)


Macro: JOB_TITLE
(
   {JobTitle}
   (
      ({Token.string == "kiêm"})?
      {JobTitle}
   )?
)


///////////////////////////////////////////////////////////
// Person Rules


Rule:	Not_Spur_PersonTitle_Job_Org_Full
Priority: 1000
/* Vd. 1.  Thầy Nguyễn Anh Sơn - Giám đốc Trung tâm thông tin tuyển sinh Trường ĐH Công nghiệp TP.HCM
 *       2.  Ông ĐẶNG HỒNG KỲ (phó giám đốc Trung tâm Thông tin di động khu vực 2, MobiFone)
 *       3.  Tiến sĩ Vũ Bằng, Phó Chủ tịch UBCKNN cho biết 
 */
{TempPerson}
(
   {Token.kind == punctuation}
)
(
   ({Token})?
   {JobTitle}
   {TempOrganization}
):noNeed
-->
{}


Rule:	Semi_Spur_PersonTitle_Job_Org_1
Priority: 500
/* Vd. 1.  Thầy Nguyễn Anh Sơn - Giám đốc Trung tâm thông tin tuyển sinh Trường ĐH Công nghiệp TP.HCM
 *       2.  Ông ĐẶNG HỒNG KỲ (phó giám đốc Trung tâm Thông tin di động khu vực 2, MobiFone)
 *       3.  Tiến sĩ Vũ Bằng, Phó Chủ tịch UBCKNN cho biết 
 */
{TempPerson}
(
   {Token.kind == punctuation}
)
(
   ({Token})?
   {JobTitle}
   (({NamedEntity} | {Np})+):orgName
)
-->
{
// Tổ chức 
	gate.AnnotationSet orgSet = (gate.AnnotationSet)bindings.get("orgName");
	gate.Annotation orgAnn = (gate.Annotation)orgSet.iterator().next();

	gate.FeatureMap features_org = Factory.newFeatureMap();
	features_org.put("class", "http://www.dit.hcmut.edu.vn/vnkim/vnkimo.rdfs#Tổ_chức");
	features_org.put("kind", "orgName");

	features_org.put("rule", "Semi_Spur_PersonTitle_Job_Org_1");
	annotations.add(orgSet.firstNode(), orgSet.lastNode(), "TempOrganization", features_org);
}


Rule:	Semi_Spur_PersonTitle_Job_Org_2
Priority: 500
/* Vd. 1.  Thầy Nguyễn Anh Sơn - Giám đốc Trung tâm thông tin tuyển sinh Trường ĐH Công nghiệp TP.HCM
 *       2.  Ông ĐẶNG HỒNG KỲ (phó giám đốc Trung tâm Thông tin di động khu vực 2, MobiFone)
 *       3.  Tiến sĩ Vũ Bằng, Phó Chủ tịch UBCKNN cho biết 
 */
(
   (TITLE) :title
   (  ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})
   ):personPure
):person
(
   {Token.kind == punctuation}
)
(
   ({Token})?
   {JobTitle}
   {TempOrganization}
)
-->
{
// Con người
	gate.AnnotationSet person = (gate.AnnotationSet)bindings.get("person");
	gate.Annotation personAnn = (gate.Annotation)person.iterator().next();
	gate.AnnotationSet personPure = (gate.AnnotationSet)bindings.get("personPure");
	gate.Annotation personPureAnn = (gate.Annotation)personPure.iterator().next();

	gate.FeatureMap features_per = Factory.newFeatureMap();
	features_per.put("class", "http://www.dit.hcmut.edu.vn/vnkim/vnkimo.rdfs#Con_người");

	// get original string of the trusted text part
	String pure = doc.getContent().toString().substring(personPure.firstNode().getOffset().intValue(), personPure.lastNode().getOffset().intValue());
	features_per.put("originalName", pure);

	features_per.put("kind", "personPlus");
	features_per.put("rule", "Semi_Spur_PersonTitle_Job_Org_2");
	annotations.add(person.firstNode(), person.lastNode(), "TempPerson", features_per);
}



Rule:	Spur_PersonTitle_Job_Org_Full
Priority: 300
/* Vd. 1.  Thầy Nguyễn Anh Sơn - Giám đốc Trung tâm thông tin tuyển sinh Trường ĐH Công nghiệp TP.HCM
 *       2.  Ông ĐẶNG HỒNG KỲ (phó giám đốc Trung tâm Thông tin di động khu vực 2, MobiFone)
 *       3.  Tiến sĩ Vũ Bằng, Phó Chủ tịch UBCKNN cho biết
 */
(
   (TITLE) :title
   (  ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})
   ):personPure
):person
(
   {Token.kind == punctuation}
)
(
   ({Token})?
   {JobTitle}
   (({NamedEntity} | {Np})+):orgName
)
-->
{
// Con người
	gate.AnnotationSet person = (gate.AnnotationSet)bindings.get("person");
	gate.Annotation personAnn = (gate.Annotation)person.iterator().next();
	gate.AnnotationSet personPure = (gate.AnnotationSet)bindings.get("personPure");
	gate.Annotation personPureAnn = (gate.Annotation)personPure.iterator().next();

	gate.FeatureMap features_per = Factory.newFeatureMap();
	features_per.put("class", "http://www.dit.hcmut.edu.vn/vnkim/vnkimo.rdfs#Con_người");

	// get original string of the trusted text part
	String pure = doc.getContent().toString().substring(personPure.firstNode().getOffset().intValue(), personPure.lastNode().getOffset().intValue());
	features_per.put("originalName", pure);

	features_per.put("kind", "personPlus");
	features_per.put("rule", "Spur_PersonTitle_Job_Org_Full");
	annotations.add(person.firstNode(), person.lastNode(), "TempPerson", features_per);


// Tổ chức 
	gate.AnnotationSet orgSet = (gate.AnnotationSet)bindings.get("orgName");
	gate.Annotation orgAnn = (gate.Annotation)orgSet.iterator().next();

	gate.FeatureMap features_org = Factory.newFeatureMap();
	features_org.put("class", "http://www.dit.hcmut.edu.vn/vnkim/vnkimo.rdfs#Tổ_chức");
	features_org.put("kind", "orgName");

	features_org.put("rule", "Spur_PersonTitle_Job_Org_Full");
	annotations.add(orgSet.firstNode(), orgSet.lastNode(), "TempOrganization", features_org);
}


/////////////////////////////////////////////////////////////////
// TRIVIAL RULES
// Các luật hiển nhiên
// Chức danh hay Nghề nghiệp + Con người
/////////////////////////////////////////////////////////////////

// Negative rules
Rule:	NotPersonTitle_1
Priority: 250
(
   {TempPerson}
   {Token.kind == punctuation}
   (
      ({Token})?
      {JobTitle}
      {TempOrganization}
   )
):noNeed
-->
{}


Rule:	NotPersonTitle_2
Priority: 150
(
   {TempPerson.rule == Spur_PersonTitle}
):noNeed
-->
{}


Rule:	PersonTitle
Priority: 100
(
   (TITLE) :title
   (  ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})
   ):personPure
):person
-->
{
	gate.AnnotationSet person = (gate.AnnotationSet)bindings.get("person");
	gate.Annotation personAnn = (gate.Annotation)person.iterator().next();
	gate.AnnotationSet personPure = (gate.AnnotationSet)bindings.get("personPure");
	gate.Annotation personPureAnn = (gate.Annotation)personPure.iterator().next();

	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("class", "http://www.dit.hcmut.edu.vn/vnkim/vnkimo.rdfs#Con_người");

	String pure = doc.getContent().toString().substring(personPure.firstNode().getOffset().intValue(), personPure.lastNode().getOffset().intValue());
	features.put("originalName", pure);

	String gender = null;
	gate.AnnotationSet title = (gate.AnnotationSet)bindings.get("title");
	if (title != null && title.size()>0)
	{
		gate.Annotation titleAnn = (gate.Annotation)title.iterator().next();
	 	if (titleAnn != null)  gender = (String) titleAnn.getFeatures().get("gender");
	}
	if (gender == null) gender = (String) personPureAnn.getFeatures().get("gender");
	if (gender != null) features.put("gender",gender);

	features.put("kind", "personPlus");
	features.put("rule", "PersonTitle");
	annotations.add(person.firstNode(), person.lastNode(), "TempPerson", features);
}

Rule:	NotPersonTitleGender
Priority: 150
(
   ({Title.gender == male} | {Title.gender == female})
   {NotProper}
):noNeed
-->
{}

Rule: PersonTitleGender
Priority: 100
// use this rule if the title has a feature gender
// Miss F Smith
(
   ({Title.gender == male} | {Title.gender == female})
   (  ({NamedEntity} | {Np})
      ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})?
      ({NamedEntity} | {Np})?
   ):personPure
)
:person -->
{
	gate.AnnotationSet personSet = (gate.AnnotationSet)bindings.get("person");
	gate.Annotation personAnn = (gate.Annotation)personSet.iterator().next();

	gate.AnnotationSet personPure = (gate.AnnotationSet)bindings.get("personPure");
	gate.Annotation personPureAnn = (gate.Annotation)personPure.iterator().next();

	gate.AnnotationSet title = (gate.AnnotationSet)personSet.get("Title");
	gate.Annotation titleAnn = (gate.Annotation)title.iterator().next();

	gate.FeatureMap features = Factory.newFeatureMap();

	//propagate gender feature (and value) from title
	features.put("gender", titleAnn.getFeatures().get("gender"));
	if (((String)titleAnn.getFeatures().get("gender")).equalsIgnoreCase("male"))
		features.put("class","http://www.dit.hcmut.edu.vn/vnkim/vnkimo.rdfs#Nam");
	else
		features.put("class","http://www.dit.hcmut.edu.vn/vnkim/vnkimo.rdfs#Nữ");

	String pure = doc.getContent().toString().substring(personPure.firstNode().getOffset().intValue(), personPure.lastNode().getOffset().intValue());
	features.put("originalName", pure);

	features.put("kind", "personPlus");
	features.put("rule", "PersonTitleGender");
	// create a TempPerson annotation and add the features we've created
	annotations.add(personSet.firstNode(), personSet.lastNode(), "TempPerson", features);
}


